#!/bin/bash
#
# Install the McGill Robotics CompSys package

# Fail on first error
set -e

# Determine ROBOTIC_PATH
export ROBOTIC_PATH=$(dirname ${PWD})

# Colors
header=$(tput setab 1; tput setaf 0)
question=$(tput bold; tput setaf 4)
section=$(tput bold; tput setaf 2)
warning=$(tput bold; tput setaf 1)
reset=$(tput sgr0)

# Verify running on Ubuntu 16.04
if [[ $(lsb_release -sc) != "xenial" ]]; then
  echo "${warning}CompSys only supports Ubuntu 16.04${reset}"
  exit -1
fi

# Check if run as root
if [[ "${EUID}" -eq 0 ]]; then
  echo "${warning}Please DO NOT run this script as root${reset}"
  exit -1
fi

# Header
echo
echo "${header} Welcome to McGill Robotics ${reset}"
echo

# Instructions
cat <<END
Please make sure you have an internet connection and have properly set up your
ssh key on GitHub before proceeding.
END

# Disclaimer
echo
echo "${warning}DISCLAIMER${reset}"
cat DISCLAIMER
echo

# Ask for sudo privileges
sudo -K
sudo echo || exit 1
echo "Please answer the following questions truthfully:"
echo

# Ask if robot
echo -n "${question}Are you a robot? Probably not.${reset}"
read -p "${ask} [y/N] (default no) " irobot
case "${irobot}" in
  y|Y )
    echo "Beep boop..."
    export IAMROBOT=true
    ;;
  * )
    echo "Thought so."
    export IAMROBOT=false
    if [[ -z "$(git config --global user.name)" ]]; then
      echo "Your git user.name is not set..."
      echo "${ask}Please enter your full name:${reset}"
      read GIT_USER_NAME
      git config --global user.name "${GIT_USER_NAME}"
      echo
    fi 

    if [[ -z "$(git config --global user.email)" ]]; then
      echo "Your git user.email is not set..."
      echo "${ask}Please enter your GitHub email:${reset}"
      read GIT_USER_EMAIL
      git config --global user.email "${GIT_USER_EMAIL}"
      echo
    fi
    ;;
esac
echo

# Select project
echo "${question}Which project are you working on?${reset}"
GIT_BASE_URL="mcgill-robotics"
select project in "AUV" "DRONE" "ROVER" "DEMO" "OTHER" "CUSTOM"; do
  case "${project}" in
    AUV )
      export ROBOT=auv
      GIT_URL="${GIT_BASE_URL}/${ROBOT}.git"
      break;;
    DRONE )
      export ROBOT=drone
      GIT_URL="${GIT_BASE_URL}/${ROBOT}.git"
      break;;
    ROVER )
      export ROBOT=rover
      GIT_URL="${GIT_BASE_URL}/${ROBOT}.git"
      break;;
    DEMO )
      export ROBOT=demo
      GIT_URL="${GIT_BASE_URL}/${ROBOT}.git"
      break;;
    OTHER )
      echo -n "Enter the repository name: https://github.com/mcgill-robotics/"
      read ROBOT
      GIT_URL="${GIT_BASE_URL}/${ROBOT}.git"
      break;;
    CUSTOM )
      echo -n "Enter the project's name: "
      read ROBOT
      echo -n "Enter the repository's URL: https://github.com/"
      read GIT_URL
      break;;
  esac
done
if [[ -z "${ROBOT// }" ]]; then
  echo "Project name cannot be empty"
  exit -1
elif [[ -z "${GIT_URL// }" ]]; then
  echo "Repository URL cannot be empty"
  exit -1
fi
echo "Welcome to ${ROBOT}!"

# Ask to install zsh if not installed
if [[ ! ${SHELL##*/} = "zsh" ]]; then
  echo
  ask="${question}Would you like to switch to zsh? Here be dragons.${reset}"
  read -p "${ask} [y/N] (default no) " zshplz
  case "${zshplz}" in
    y|Y )
      echo "zsh will be installed!"
      echo "You may need to log out and log back in to reflect the changes"
      export INSTALL_ZSH=true
      ;;
    * )
      echo "You're missing out!"
      echo "You can run ./setup/zsh/install if you change your mind"
      export INSTALL_ZSH=false
      ;;
  esac
fi

# Ask to install ROS if not installed
if [[ -z ${ROS_DISTRO} ]]; then
  echo
  ask="${question}Would you like to install ROS? This takes a while.${reset}"
  read -p "${ask} [Y/n] (default yes) " rosplz
  case "${rosplz}" in
    n|N )
      echo "ROS installation will be skipped!"
      echo "Run ./setup/ros/install to install later"
      export INSTALL_ROS=false
      ;;
    * )
      echo "ROS will be installed!"
      export INSTALL_ROS=true
      ;;
  esac
fi

# Inform to wait
echo
echo "Thanks! Now sit back and relax: we'll take care of the rest."
echo

# Update and install packages
echo "${section}Dependencies${reset}"
./update
echo

# Change setting for robot
if [[ ${IAMROBOT} = true ]]; then
  echo "${section}Robot Setup${reset}"
  git config --global url."https://github.com/".insteadOf 'git@github.com:'
  git config --global credential.helper 'cache --timeout=1800'
  git config --global user.name "McGill Robotics"
  git config --global user.email "dev@mcgillrobotics.com"
  sudo apt-get install -y openssh-server
  echo
fi
git config --global push.default simple

# Install zsh if requested
if [[ ${INSTALL_ZSH} = true ]]; then
  echo "${section}ZSH${reset}"
  ./setup/zsh/install
  echo
fi

# Configure RC files
echo "${section}Configuration files${reset}"
./setup/config/install
echo

# Install ROS if requested
if [[ ${INSTALL_ROS} = true ]]; then
  echo "${section}ROS${reset}"
  ./setup/ros/install
  echo
fi

# Clone repository and setup robot remote
echo "${section}Git${reset}"
gitdir=${ROBOTIC_PATH}/${ROBOT}
if [[ ! -d ${gitdir} ]]; then
  echo "Cloning ${robot} git repository..."
  
  if [[ ${GIT_BRANCH} ]]; then
    gitcmd="-b ${GIT_BRANCH}"
  fi

  git clone --recursive git@github.com:${GIT_URL} ${gitdir} ${gitcmd} || {
    echo "${warning}GitHub SSH key doesn't seem to be set up properly${reset}"
    echo "${warning}Falling back to HTTPS for now...${reset}"

    git clone --recursive https://github.com/${GIT_URL} ${gitdir} ${gitcmd}
  }

  pushd ${gitdir}

  echo "Setting up robot remote repository..."
  git remote add robot robotics@${ROBOT}:${ROBOT}.git

  if [[ -f setup.sh ]]; then
    echo "Sourcing roboticrc..."
    source ${ROBOTIC_PATH}/compsys/roboticrc

    echo "Setting up robot dependencies..."
    source setup.sh
  fi
  popd
fi
echo "Done."
echo

# Done
echo "All done!"
echo "Simply, open up a new terminal"
echo "You can then start playing around in ${ROBOTIC_PATH}/${ROBOT}"
