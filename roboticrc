# Initialize McGill Robotics customizations, ROS setup and paths

# Determine shell
SHELL_EXT=$(
  ([ -n "${ZSH_VERSION}" ] && echo zsh) ||
  ([ -n "${BASH_VERSION}" ] && echo bash)
)

# Set CLOBBER option to properly source ROS on ZSH
if [[ ${SHELL_EXT} = "zsh" ]]; then
  setopt CLOBBER
fi

# Setup ROS
if [[ -s /opt/ros/kinetic/setup.${SHELL_EXT} ]]; then
  source /opt/ros/kinetic/setup.${SHELL_EXT}
fi

function rosconnect {
  if [[ -n "${1}" ]]; then
    export ROS_HOSTNAME=${1}
    export ROS_MASTER_URI=http://${1}:11311
  else
    export ROS_HOSTNAME=
    export ROS_MASTER_URI=http://localhost:11311
  fi
}

function rosworkon {
  if [[ -n "${1}" ]]; then
    # Reset package path from previous workspace
    export ROS_PACKAGE_PATH=/opt/ros/kinetic/share

    # Source the new workspace
    if [[ -s ${ROBOTIC_PATH}/${1}/catkin_ws/devel/setup.${SHELL_EXT} ]]; then
      source ${ROBOTIC_PATH}/${1}/catkin_ws/devel/setup.${SHELL_EXT}
    fi

    # Set environment variables
    export ROS_WORKSPACE=${ROBOTIC_PATH}/${1}/catkin_ws
    export ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH}:${ROS_WORKSPACE}
  else
    echo "usage: rosworkon <ROBOT>"
    return 1
  fi
}

# Set up default robot
rosworkon ${ROBOT}

# Add compsys scripts to PYTHONPATH
export PYTHONPATH=${PYTHONPATH}:${ROBOTIC_PATH}/compsys/scripts

# Source custom aliases and functions
source ${ROBOTIC_PATH}/compsys/aliases
