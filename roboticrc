# Initialize McGill Robotics customizations, ROS setup and paths

# Determine shell
SHELL_EXT=$(
  ([ -n "${ZSH_VERSION}" ] && echo zsh) ||
  ([ -n "${BASH_VERSION}" ] && echo bash)
)

# Set CLOBBER option to properly source ROS on ZSH
if [[ ${SHELL_EXT} = "zsh" ]]; then
  setopt CLOBBER
fi

# Setup ROS
if [[ -s /opt/ros/kinetic/setup.${SHELL_EXT} ]]; then
  source /opt/ros/kinetic/setup.${SHELL_EXT}
fi

function rosconnect {
  if [[ -n "${1}" ]]; then
    export ROS_HOSTNAME=${1}
    export ROS_MASTER_URI=http://${1}:11311
  else
    export ROS_HOSTNAME=
    export ROS_MASTER_URI=http://localhost:11311
  fi
}

function rosworkon {
  if [[ -n "${1}" ]]; then
    if [[ ! -d "${ROBOTIC_PATH}/${1}" ]]; then
      echo "Could not find robot repository at ${ROBOTIC_PATH}/${1}"
      exit -1
    fi
    # Reset ROBOT
    export ROBOT=${1}

    if [[ -n "${2}" ]]; then
      profile_path="${ROBOTIC_PATH}/${ROBOT}/catkin_ws/.catkin_tool/${2}"
      if [[ ! -d "${profile_path}" ]]; then
        echo "Could not find profile at ${profile_path}"
        exit -1
      else
        export PROFILE="${2}"
        pushd ${ROBOTIC_PATH}/${ROBOT}/catkin_ws
        catkin profile set ${PROFILE}
        popd
        if [[ -e "${profile_path}/topics" ]]; then
          export TOPICS_PATH="${profile_path}/topics"
        fi
      fi

    # Reset TOPICS_PATH for bagging
    if [[ -z "${PROFILE}" ]] || [[ "${PROFILE}" == "default" ]]; then
      export TOPICS_PATH=${ROBOTIC_PATH}/${ROBOT}/topics
    
    # Reset package path from previous workspace
    export ROS_PACKAGE_PATH=/opt/ros/kinetic/share

    # Source the new workspace
    if [[ -s ${ROBOTIC_PATH}/${1}/catkin_ws/devel/setup.${SHELL_EXT} ]]; then
      source ${ROBOTIC_PATH}/${1}/catkin_ws/devel/setup.${SHELL_EXT}
    fi

    # Set environment variables
    export ROS_WORKSPACE=${ROBOTIC_PATH}/${1}/catkin_ws
    export ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH}:${ROS_WORKSPACE}

    # Source robot-specific configuration
    if [[ -f ${ROBOTIC_PATH}/${ROBOT}/robotrc ]]; then
      source ${ROBOTIC_PATH}/${ROBOT}/robotrc
    fi
  else
    echo "usage: rosworkon <ROBOT> [PROFILE]"
    return 1
  fi
}

# Set up default robot
rosworkon ${ROBOT}

# Add compsys scripts to PYTHONPATH
export PYTHONPATH=${PYTHONPATH}:${ROBOTIC_PATH}/compsys/scripts

# Add TivaWare path and lm4flash path
if [[ -d ${ROBOTIC_PATH}/tivaware ]]; then
  export TIVA_WARE_PATH=${ROBOTIC_PATH}/tivaware
  export TIVA_FLASH_EXECUTABLE=lm4flash
fi

# Source custom aliases and functions
source ${ROBOTIC_PATH}/compsys/aliases

# Source catkin-tools shell verbs
if [[ -x $(command -v catkin) ]]; then
  source $(catkin locate --shell-verbs)
fi
