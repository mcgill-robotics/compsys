# Initialize McGill Robotics customizations, ROS setup and paths

# Determine shell
SHELL_EXT=$(
  ([ -n "${ZSH_VERSION}" ] && echo zsh) ||
  ([ -n "${BASH_VERSION}" ] && echo bash)
)

# ZSH-specific settings
if [[ ${SHELL_EXT} = "zsh" ]]; then
  # Set CLOBBER option to properly source ROS
  setopt CLOBBER

  # Allow for duplicate paths in the stack
  unsetopt PUSHD_IGNORE_DUPS
fi

# Setup ROS
if [[ -s /opt/ros/kinetic/setup.${SHELL_EXT} ]]; then
  source /opt/ros/kinetic/setup.${SHELL_EXT}
fi

function rosconnect {
  if [[ -n "${1}" ]]; then
    export ROS_HOSTNAME=${1}
    export ROS_MASTER_URI=http://${1}:11311
  else
    export ROS_HOSTNAME=
    export ROS_MASTER_URI=http://localhost:11311
  fi
}

function rosworkon {
  if [[ -n "${1}" ]]; then
    if [[ ! -d "${ROBOTIC_PATH}/${1}" ]]; then
      echo "Could not find robot repository named ${1} in ${ROBOTIC_PATH}!"
      return 1
    fi
    # Reset ROBOT
    export ROBOT=${1}
    unset CATKIN_PROFILE
    repo_path=${ROBOTIC_PATH}/${ROBOT}

    # Reset package path from previous workspace
    export ROS_PACKAGE_PATH=/opt/ros/kinetic/share

    # Source the new workspace
    if [[ -s ${repo_path}/catkin_ws/devel/setup.${SHELL_EXT} ]]; then
      source ${repo_path}/catkin_ws/devel/setup.${SHELL_EXT}
    fi

    # Set environment variables
    export ROS_WORKSPACE=${repo_path}/catkin_ws

    # Source robot-specific configuration
    if [[ -f ${repo_path}/robotrc ]]; then
      source ${repo_path}/robotrc
    fi

    if [[ -n ${2} ]]; then
      # When second parameter is set, change profile and export TOPICS_PATH
      profile_path=${ROS_WORKSPACE}/.catkin_tools/profiles/${2}
      if [[ ! -d ${profile_path} ]]; then
        echo "Could not find profile at ${profile_path}"
        return 1
      else
        export CATKIN_PROFILE=${2}
        pushd ${ROS_WORKSPACE}
        catkin profile set ${CATKIN_PROFILE} > /dev/null
        popd
      fi
    else
      # When the second parameter is not set, find the current active profile
      active_profile=${ROS_WORKSPACE}/.catkin_tools/profiles/profiles.yaml
      if [[ -e ${active_profile} ]]; then
        active_profile=$(head -n 1 ${active_profile})
        export CATKIN_PROFILE=${active_profile:8}
        profile_path=${ROS_WORKSPACE}/.catkin_tools/profiles/${CATKIN_PROFILE}
        unset active_profile
      fi
    fi

    # Set TOPICS_PATH for bagging
    if [[ -z "${CATKIN_PROFILE}" ]] ||
      [[ "${CATKIN_PROFILE}" == "default" ]]
      [[ ! -e ${profile_path}/topics ]]; then
      export TOPICS_PATH=${ROBOTIC_PATH}/${ROBOT}/topics
    else
      export TOPICS_PATH=${profile_path}/topics
    fi
    unset profile_path
    unset repo_path
  else
    echo "usage: rosworkon <ROBOT> [PROFILE]"
    return 1
  fi
}

# Set up default robot
rosworkon ${ROBOT}

# Add compsys scripts to PYTHONPATH
export PYTHONPATH=${PYTHONPATH}:${ROBOTIC_PATH}/compsys/scripts

# Source custom aliases and functions
source ${ROBOTIC_PATH}/compsys/aliases

# Source catkin-tools shell verbs
if [[ -x $(command -v catkin) ]]; then
  source $(catkin locate --shell-verbs)
fi
